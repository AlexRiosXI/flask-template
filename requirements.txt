alembic==1.16.4
blinker==1.9.0
click==8.2.1
Flask==3.1.1
flask-cors==6.0.1
Flask-Migrate==4.1.0
Flask-SQLAlchemy==3.1.1
greenlet==3.2.3
itsdangerous==2.2.0
Jinja2==3.1.6
Mako==1.3.10
MarkupSafe==3.0.2
psycopg2-binary==2.9.10
python-dotenv==1.1.1
SQLAlchemy==2.0.41
typing_extensions==4.14.1
Werkzeug==3.1.3



class Users(ModelTimeStamp):
    user_id = db.Column(db.String(36), primary_key=True)
    email = db.Column(db.String(255), unique=True, nullable=False)
    def __init__(self, user_id, email):
        self.user_id = user_id
        self.email = email
        

class ModelTimeStampUserTrack(ModelTimeStamp):
    __abstract__ = True
    created_by = db.Column(db.Integer, db.ForeignKey('users.user_id'), nullable=True)
    updated_by = db.Column(db.Integer, db.ForeignKey('users.user_id'), nullable=True)

    def save(self, commit=True):
        self.created_by = request.user_id
        super().save(commit)

    def update(self, commit=True):
        self.updated_by = request.user_id
        super().update(commit)


class ModelTimeStampUserTrackSoftDelete(ModelTimeStampUserTrack):
    __abstract__ = True
    deleted_by = db.Column(db.Integer, db.ForeignKey('users.user_id'), nullable=True)

    def delete(self, commit=True):
        self.deleted_by = request.user_id
        super().delete(commit)
    
    def restore(self, commit=True):
        self.deleted_by = None
        super().restore(commit)

